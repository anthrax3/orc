FROM ubuntu:latest
LABEL maintainer "gordonh@member.fsf.org"

# Install Standard Dependencies
RUN apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get -yq upgrade
RUN DEBIAN_FRONTEND=noninteractive apt-get -yq install wget apt-transport-https gnupg curl libssl-dev git python build-essential

# Setup and Build Shadow
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y gcc g++ libglib2.0-0 libglib2.0-dev libigraph0v5 libigraph0-dev cmake make xz-utils
RUN DEBIAN_FRONTEND=noninteractive apt-get install libc-dbg
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y python python-matplotlib python-numpy python-scipy python-networkx python-lxml
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y git dstat screen htop
RUN git clone https://github.com/shadow/shadow.git /root/shadow \
  && cd /root/shadow \
  && ./setup build --clean --debug --test \
  && ./setup install \
  && ./setup test

# Setup Tor Alpha (for v3 Hidden Services Support)
RUN echo "deb http://deb.torproject.org/torproject.org xenial main" >> /etc/apt/sources.list
RUN echo "deb-src http://deb.torproject.org/torproject.org xenial main" >> /etc/apt/sources.list
RUN echo "deb http://deb.torproject.org/torproject.org tor-experimental-0.3.2.x-xenial main" >> /etc/apt/sources.list
RUN echo "deb-src http://deb.torproject.org/torproject.org tor-experimental-0.3.2.x-xenial main" >> /etc/apt/sources.list
RUN gpg --keyserver keys.gnupg.net --recv A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89
RUN gpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | apt-key add -
RUN apt update
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y tor deb.torproject.org-keyring

# Setup Tor Shadow Plugin
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y gcc automake autoconf zlib1g-dev liblzma5 liblzma-dev
RUN git clone https://github.com/bookchin/shadow-plugin-tor.git /root/shadow-plugin-tor
RUN cd /root/shadow-plugin-tor \
  && ./setup dependencies -y \
  && ./setup build --tor-version 0.3.2.4-alpha -y \
  && ./setup install

# Setup Node.js
RUN set -ex \
  && for key in \
    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \
    FD3A5288F042B6850C66B31F09FE44734EB7990E \
    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \
    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \
    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
    B9AE9905FFD7803F25714661B63B535A4C206CA9 \
    56730D5401028683275BD23C23EFEFE93C4CFFFE \
    77984A986EBC2AA786BC0F66B01FBB92821C587A \
  ; do \
    gpg --keyserver pgp.mit.edu --recv-keys "$key" || \
    gpg --keyserver keyserver.pgp.com --recv-keys "$key" || \
    gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" ; \
  done
ENV NODE_VERSION 8.9.1
RUN ARCH= && dpkgArch="$(dpkg --print-architecture)" \
  && case "${dpkgArch##*-}" in \
    amd64) ARCH='x64';; \
    ppc64el) ARCH='ppc64le';; \
    s390x) ARCH='s390x';; \
    arm64) ARCH='arm64';; \
    armhf) ARCH='armv7l';; \
    i386) ARCH='x86';; \
    *) echo "unsupported architecture"; exit 1 ;; \
  esac \
  && curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz" \
  && curl -SLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \
  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \
  && grep " node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum -c - \
  && tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1 --no-same-owner \
  && rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt \
  && ln -s /usr/local/bin/node /usr/local/bin/nodejs

# Setup ORC Daemon
ENV GRANAX_USE_TOR_ALPHA="1"
ENV GRANAX_USE_SYSTEM_TOR="1"
ENV GRANAX_TOR_ARGS="--GeoIPFile /root/.shadow/share/geoip --defaults-torrc /root/shadow-tor/conf/tor.common.torrc -f /root/shadow-tor/conf/tor.client.torrc"
RUN git clone https://github.com/orcproject/orc /root/orc; \
    git fetch --tags; \
    git checkout $(git describe --tags `git rev-list --tags --max-count=1`); \
    cd /root/orc && npm install --unsafe-perm
ENV orcd_BridgeHostname="0.0.0.0"

# Setup Configuration Directories
COPY .simulation/shadow-tor /root/shadow-tor
COPY .simulation/orc-providers /root/orc-providers
COPY .simulation/start.sh /root/start.sh

# Starting the Container
VOLUME ["/root/.config/orcd"]
EXPOSE 9089
CMD []
ENTRYPOINT ["/bin/sh", "/root/start.sh"]
